[
(tag:"LANG_TYPES",file:"src/mapping.rs",address:"/^pub static LANG_TYPES: &[(&str, &str)] = &[$/;\"",kind:"v",),// [0]
(tag:"Runcommand",file:"src/workspace.rs",address:"/^impl Runcommand {$/;\"",kind:"c",),// [1]
(tag:"Runcommand",file:"src/workspace.rs",address:"/^pub struct Runcommand {$/;\"",kind:"s",),// [2]
(tag:"TagLine",file:"src/ctags_api.rs",address:"/^impl TagLine {$/;\"",kind:"c",),// [3]
(tag:"TagLine",file:"src/ctags_api.rs",address:"/^pub struct TagLine {$/;\"",kind:"s",),// [4]
(tag:"UI",file:"src/ui.rs",address:"/^pub struct UI {$/;\"",kind:"s",),// [5]
(tag:"Workspace",file:"src/workspace.rs",address:"/^pub struct Workspace {$/;\"",kind:"s",),// [6]
(tag:"add_node",file:"src/main.rs",address:"/^pub fn add_node(tree_store: &TreeStore, root: &Path) {$/;\"",kind:"f",),// [7]
(tag:"add_node_recursive",file:"src/main.rs",address:"/^pub fn add_node_recursive(tree_store: &TreeStore, node: &Path, parent: Option<&TreeIter>) {$/;\"",kind:"f",),// [8]
(tag:"address",file:"src/ctags_api.rs",address:"/^    pub address: String,$/;\"",kind:"m",),// [9]
(tag:"command",file:"src/workspace.rs",address:"/^    pub command: String,$/;\"",kind:"m",),// [10]
(tag:"command_registry",file:"src/main.rs",address:"/^pub fn command_registry($/;\"",kind:"f",),// [11]
(tag:"commands",file:"src/workspace.rs",address:"/^    pub commands: Vec<Runcommand>,$/;\"",kind:"m",),// [12]
(tag:"create_tab",file:"src/main.rs",address:"/^pub fn create_tab($/;\"",kind:"f",),// [13]
(tag:"ctags_api",file:"src/lib.rs",address:"/^pub mod ctags_api;$/;\"",kind:"n",),// [14]
(tag:"distribute_tags",file:"src/ctags_api.rs",address:"/^pub fn distribute_tags() {$/;\"",kind:"f",),// [15]
(tag:"exclude_files",file:"src/workspace.rs",address:"/^    pub exclude_files: Vec<String>,$/;\"",kind:"m",),// [16]
(tag:"execute_command",file:"src/workspace.rs",address:"/^    pub fn execute_command(the_cmd: Runcommand, cwd: &String) -> String {$/;\"",kind:"P",),// [17]
(tag:"file",file:"src/ctags_api.rs",address:"/^    pub file: String,$/;\"",kind:"m",),// [18]
(tag:"file_extension_to_lang",file:"src/mapping.rs",address:"/^pub fn file_extension_to_lang(extension: &str) -> Option<&str> {$/;\"",kind:"f",),// [19]
(tag:"format_file",file:"src/main.rs",address:"/^pub fn format_file() -> String {$/;\"",kind:"f",),// [20]
(tag:"generate_command",file:"src/workspace.rs",address:"/^    pub fn generate_command(&self) -> Option<Command> {$/;\"",kind:"P",),// [21]
(tag:"get_by_left",file:"src/mapping.rs",address:"/^pub fn get_by_left(glob: &str) -> Option<&str> {$/;\"",kind:"f",),// [22]
(tag:"get_by_right",file:"src/mapping.rs",address:"/^pub fn get_by_right(lang: &str) -> Vec<Option<&str>> {$/;\"",kind:"f",),// [23]
(tag:"get_extension_from_filename",file:"src/utils.rs",address:"/^pub fn get_extension_from_filename(filename: &str) -> Option<&str> {$/;\"",kind:"f",),// [24]
(tag:"get_pretty",file:"src/utils.rs",address:"/^pub fn get_pretty() -> PrettyConfig {$/;\"",kind:"f",),// [25]
(tag:"has_button",file:"src/workspace.rs",address:"/^    pub has_button: bool,$/;\"",kind:"m",),// [26]
(tag:"has_template",file:"src/workspace.rs",address:"/^    pub fn has_template(&self) -> bool {$/;\"",kind:"P",),// [27]
(tag:"home",file:"src/workspace.rs",address:"/^    pub home: String,$/;\"",kind:"m",),// [28]
(tag:"key_binding",file:"src/workspace.rs",address:"/^    pub key_binding: Option<String>,$/;\"",kind:"m",),// [29]
(tag:"kind",file:"src/ctags_api.rs",address:"/^    pub kind: String,$/;\"",kind:"m",),// [30]
(tag:"lang",file:"src/ui.rs",address:"/^    pub lang: LanguageManager,$/;\"",kind:"m",),// [31]
(tag:"load_file_checked",file:"src/utils.rs",address:"/^pub fn load_file_checked(path: &Path) -> String {$/;\"",kind:"f",),// [32]
(tag:"load_tag",file:"src/ctags_api.rs",address:"/^pub fn load_tag(path: &Path) -> Vec<TagLine> {$/;\"",kind:"f",),// [33]
(tag:"load_workspace",file:"src/workspace.rs",address:"/^pub fn load_workspace(path: &Path) -> Workspace {$/;\"",kind:"f",),// [34]
(tag:"main",file:"file.rs",address:"/^pub fn main() {$/;\"",kind:"f",),// [35]
(tag:"main",file:"some.rs",address:"/^pub fn main() {$/;\"",kind:"f",),// [36]
(tag:"main",file:"src/main.rs",address:"/^fn main() -> std::io::Result<()> {$/;\"",kind:"f",),// [37]
(tag:"mapping",file:"src/lib.rs",address:"/^pub mod mapping;$/;\"",kind:"n",),// [38]
(tag:"name",file:"src/workspace.rs",address:"/^    pub name: String,$/;\"",kind:"m",),// [39]
(tag:"name",file:"src/workspace.rs",address:"/^    pub name: String,$/;\"",kind:"m",),// [40]
(tag:"new",file:"src/ctags_api.rs",address:"/^    pub fn new(tag: String, file: String, address: String, kind: String) -> TagLine {$/;\"",kind:"P",),// [41]
(tag:"notebook",file:"src/ui.rs",address:"/^    pub notebook: Notebook,$/;\"",kind:"m",),// [42]
(tag:"open_project",file:"src/main.rs",address:"/^pub fn open_project($/;\"",kind:"f",),// [43]
(tag:"path_sorter",file:"src/main.rs",address:"/^pub fn path_sorter(a: &PathBuf, b: &PathBuf) -> Ordering {$/;\"",kind:"f",),// [44]
(tag:"save_it",file:"src/main.rs",address:"/^pub fn save_it(textbuffer: &TextBuffer) {$/;\"",kind:"f",),// [45]
(tag:"select_it",file:"src/main.rs",address:"/^pub fn select_it() -> bool {$/;\"",kind:"f",),// [46]
(tag:"tabs",file:"src/ui.rs",address:"/^    pub tabs: Vec<gtk::Box>,$/;\"",kind:"m",),// [47]
(tag:"tag",file:"src/ctags_api.rs",address:"/^    pub tag: String,$/;\"",kind:"m",),// [48]
(tag:"template_command",file:"src/workspace.rs",address:"/^    pub fn template_command(&mut self, file_tab: &str) {$/;\"",kind:"P",),// [49]
(tag:"tests",file:"src/lib.rs",address:"/^mod tests {$/;\"",kind:"n",),// [50]
(tag:"tree_selection",file:"src/ui.rs",address:"/^    pub tree_selection: TreeSelection,$/;\"",kind:"m",),// [51]
(tag:"ui",file:"src/lib.rs",address:"/^pub mod ui;$/;\"",kind:"n",),// [52]
(tag:"utils",file:"src/lib.rs",address:"/^pub mod utils;$/;\"",kind:"n",),// [53]
(tag:"workspace",file:"src/lib.rs",address:"/^pub mod workspace;$/;\"",kind:"n",),// [54]
]
